<map id="llvmir2hll::FuncOptimizer" name="llvmir2hll::FuncOptimizer">
<area shape="rect" id="node6" href="$classllvmir2hll_1_1AggressiveDerefOptimizer.html" title="Optimizes dereferences of integer values. " alt="" coords="900,5,1100,47"/>
<area shape="rect" id="node7" href="$classllvmir2hll_1_1AuxiliaryVariablesOptimizer.html" title="Elimination of auxiliary variables. " alt="" coords="895,71,1105,112"/>
<area shape="rect" id="node8" href="$classllvmir2hll_1_1BitOpToLogOpOptimizer.html" title="Optimizes Optimizes BitAndExpr to AndOpExpr or BitOrExpr to OrOpExpr if fulfil conditions. " alt="" coords="909,136,1091,177"/>
<area shape="rect" id="node9" href="$classllvmir2hll_1_1BreakContinueReturnOptimizer.html" title="Removes statements following a break, continue, or return statements. " alt="" coords="906,201,1094,243"/>
<area shape="rect" id="node10" href="$classllvmir2hll_1_1CArrayArgOptimizer.html" title="Optimizes array arguments of function calls. " alt="" coords="889,267,1111,294"/>
<area shape="rect" id="node11" href="$classllvmir2hll_1_1CCastOptimizer.html" title="Removes casts that are in the C language implicit. " alt="" coords="903,318,1097,345"/>
<area shape="rect" id="node12" href="$classllvmir2hll_1_1CopyPropagationOptimizer.html" title="Copy propagation optimization. " alt="" coords="899,369,1101,411"/>
<area shape="rect" id="node13" href="$classllvmir2hll_1_1DeadCodeOptimizer.html" title="Removes dead code. Examples are mentioned below. " alt="" coords="889,435,1111,462"/>
<area shape="rect" id="node14" href="$classllvmir2hll_1_1DeadGlobalAssignOptimizer.html" title="Elimination of dead assignments to global variables. " alt="" coords="895,487,1105,528"/>
<area shape="rect" id="node15" href="$classllvmir2hll_1_1DeadLocalAssignOptimizer.html" title="Elimination of dead assignments to local variables. " alt="" coords="899,552,1101,593"/>
<area shape="rect" id="node16" href="$classllvmir2hll_1_1DerefAddressOptimizer.html" title="Optimizes dereferences of addresses. " alt="" coords="910,617,1090,659"/>
<area shape="rect" id="node17" href="$classllvmir2hll_1_1EmptyStmtOptimizer.html" title="Removes empty statements. " alt="" coords="885,683,1115,710"/>
<area shape="rect" id="node18" href="$classllvmir2hll_1_1IfBeforeLoopOptimizer.html" title="Optimizes if statements before loops. " alt="" coords="913,735,1087,776"/>
<area shape="rect" id="node19" href="$classllvmir2hll_1_1IfStructureOptimizer.html" title="Optimizes the structure of if statements. " alt="" coords="888,801,1112,827"/>
<area shape="rect" id="node20" href="$classllvmir2hll_1_1IfToSwitchOptimizer.html" title="Optimizes if statements to switch statements. " alt="" coords="889,851,1111,878"/>
<area shape="rect" id="node21" href="$classllvmir2hll_1_1LLVMIntrinsicsOptimizer.html" title="Optimizes calls to LLVM intrinsic functions. " alt="" coords="908,903,1092,944"/>
<area shape="rect" id="node22" href="$classllvmir2hll_1_1LoopLastContinueOptimizer.html" title="Optimizes redundant continue statements in loops. " alt="" coords="896,968,1104,1009"/>
<area shape="rect" id="node23" href="$classllvmir2hll_1_1NoInitVarDefOptimizer.html" title="Removes variable&#45;defining statements with no initializer. " alt="" coords="913,1033,1087,1075"/>
<area shape="rect" id="node24" href="$classllvmir2hll_1_1PreWhileTrueLoopConvOptimizer.html" title="Optimizes the bodies of while True loops to simplify other optimizations of these loops..." alt="" coords="911,1099,1089,1140"/>
<area shape="rect" id="node25" href="$classllvmir2hll_1_1RemoveAllCastsOptimizer.html" title="Removes all casts from a module. " alt="" coords="901,1164,1099,1205"/>
<area shape="rect" id="node26" href="$classllvmir2hll_1_1RemoveUselessCastsOptimizer.html" title="Removes useless casts from a module. " alt="" coords="902,1229,1098,1271"/>
<area shape="rect" id="node27" href="$classllvmir2hll_1_1SelfAssignOptimizer.html" title="Removes self assignments. " alt="" coords="888,1295,1112,1322"/>
<area shape="rect" id="node28" href="$classllvmir2hll_1_1SimpleCopyPropagationOptimizer.html" title="A simple version of the copy propagation optimization. " alt="" coords="876,1347,1124,1388"/>
<area shape="rect" id="node29" href="$classllvmir2hll_1_1UnreachableCodeOptimizer.html" title="Elimination of unreachable code. " alt="" coords="897,1412,1103,1453"/>
<area shape="rect" id="node30" href="$classllvmir2hll_1_1VarDefForLoopOptimizer.html" title="Optimizes VarDefStmts for induction variables of for loops. " alt="" coords="907,1477,1093,1519"/>
<area shape="rect" id="node31" href="$classllvmir2hll_1_1VarDefStmtOptimizer.html" title="Optimizes VarDefStmt to closest place of it&#39;s variable use. " alt="" coords="885,1543,1115,1570"/>
<area shape="rect" id="node32" href="$classllvmir2hll_1_1VoidReturnOptimizer.html" title="Optimizes redundant void returns. " alt="" coords="887,1594,1113,1621"/>
<area shape="rect" id="node33" href="$classllvmir2hll_1_1WhileTrueToForLoopOptimizer.html" title="Optimizes while loops into for loops. " alt="" coords="905,1645,1095,1687"/>
<area shape="rect" id="node34" href="$classllvmir2hll_1_1WhileTrueToUForLoopOptimizer.html" title="Optimizes while loops into universal for loops. " alt="" coords="900,1711,1100,1752"/>
<area shape="rect" id="node35" href="$classllvmir2hll_1_1WhileTrueToWhileCondOptimizer.html" title="Optimizes &quot;while true&quot; loops into &quot;while cond&quot; loops. " alt="" coords="897,1776,1103,1817"/>
<area shape="rect" id="node2" href="$classllvmir2hll_1_1Optimizer.html" title="A base class of all optimizers. " alt="" coords="439,881,595,907"/>
<area shape="rect" id="node3" href="$classllvmir2hll_1_1OrderedAllVisitor.html" title="A visitor that visits everything in an ordered way. " alt="" coords="188,855,391,882"/>
<area shape="rect" id="node4" href="$classllvmir2hll_1_1Visitor.html" title="A base class of all visitors. " alt="" coords="5,855,140,882"/>
</map>
